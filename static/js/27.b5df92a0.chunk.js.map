{"version":3,"sources":["components/Typography.js","components/Page.js","hooks/ScdHoFormHooks.js","hooks/validateAuthentication.js","forms/ScdHoForm.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","E_React_Demo_Projects_react_reduction_template_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","E_React_Demo_Projects_react_reduction_template_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","E_React_Demo_Projects_react_reduction_template_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","useSignUpForm","initialState","validate","_React$useState","React","useState","_React$useState2","slicedToArray","inputs","setInputs","_React$useState3","_React$useState4","touched","_React$useState5","_React$useState6","errors","setErrors","_React$useState7","_React$useState8","isSubmitting","setSubmitting","payload","Session","get","_React$useState9","_React$useState10","redirectTo","setRedirectTo","useEffect","console","log","noErrors","keys","hoLocation","hostName","obj","branchName","username","floor_q1","floor_q2","floor_q3","floor_q4","floor_q5","floor_q6","floor_q7","floor_q8","floor_q9","floor_q10","floor_q11","floor_q12","floor_q13","floor_q14","floor_q15","floor_q16","staff_q1","staff_q2","staff_q3","staff_q4","staff_q5","staff_q6","staff_q7","staff_q8","axios","post","then","res","data","goToHome","catch","error","response","alert","handleSubmit","event","preventDefault","validationErrors","handleInputChange","target","value","objectSpread","defineProperty","validateAuthentication","values","date","INITIAL_STATE","FormPage","_useState","_useState2","currentStep","setCurrentStep","_useState3","_useState4","formState","setFormState","_useState5","_useState6","_useSignUpForm","isLast","isFirst","react_default","react","Redirect","to","Tabs","id","activeKey","onSelect","handleChange","evt","Tab","eventKey","Card","CardHeader","CardBody","Form","FormGroup","Label","for","Input","onChange","onSubmit","Button","disabled","onClick"],"mappings":"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","file":"static/js/27.b5df92a0.chunk.js","sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Session } from 'bc-react-session';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nfunction useSignUpForm(initialState, validate) {\r\n    const [inputs, setInputs] = React.useState(initialState);\r\n    const [touched, setTouched] = React.useState(initialState);\r\n    const [errors, setErrors] = React.useState({});\r\n    const [isSubmitting, setSubmitting] = React.useState(false);\r\n    const apiUrl = \"http://localhost:3000/api/v1/form1\";\r\n    const session = Session.get();\r\n    const { payload } = Session.get();\r\n    const [redirectTo, setRedirectTo] = React.useState(false);\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"useEffect Called!\");\r\n        if (isSubmitting) {\r\n            const noErrors = Object.keys(errors).length === 0;\r\n            console.log(\"errors\", noErrors)\r\n            if (noErrors) {\r\n                console.log(\"authenticated!\", inputs.hoLocation, inputs.hostName);\r\n                const obj = {\r\n                    hoLocation: payload.branchName,\r\n                    hostName: payload.username,\r\n                    floor_q1: inputs.floor_q1,\r\n                    floor_q2: inputs.floor_q2,\r\n                    floor_q3: inputs.floor_q3,\r\n                    floor_q4: inputs.floor_q4,\r\n                    floor_q5: inputs.floor_q5,\r\n                    floor_q6: inputs.floor_q6,\r\n                    floor_q7: inputs.floor_q7,\r\n                    floor_q8: inputs.floor_q8,\r\n                    floor_q9: inputs.floor_q9,\r\n                    floor_q10: inputs.floor_q10,\r\n                    floor_q11: inputs.floor_q11,\r\n                    floor_q12: inputs.floor_q12,\r\n                    floor_q13: inputs.floor_q13,\r\n                    floor_q14: inputs.floor_q14,\r\n                    floor_q15: inputs.floor_q15,\r\n                    floor_q16: inputs.floor_q16,\r\n                    staff_q1: inputs.staff_q1,\r\n                    staff_q2: inputs.staff_q2,\r\n                    staff_q3: inputs.staff_q3,\r\n                    staff_q4: inputs.staff_q4,\r\n                    staff_q5: inputs.staff_q5,\r\n                    staff_q6: inputs.staff_q6,\r\n                    staff_q7: inputs.staff_q7,\r\n                    staff_q8: inputs.staff_q8,\r\n\r\n\r\n\r\n                };\r\n                axios.post('http://localhost:5000/add/ScdHo', obj)\r\n                    .then(res => {\r\n                        console.log(\"form submit data\" + res.data);\r\n                        console.log('form submitted');\r\n                        setSubmitting(false);\r\n                        goToHome();\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error.response)\r\n                    });\r\n\r\n            } else {\r\n                alert(\"Kindly fill complete form\");\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n        console.log(\"isSubmitting\", inputs)\r\n    }, [errors]);\r\n\r\n    const goToHome = () => {\r\n        setRedirectTo(true);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"handle Submit Called\", inputs)\r\n        const validationErrors = validate(inputs);\r\n        setErrors(validationErrors);\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        console.log(\"handle input change\", event.target.value);\r\n        setInputs(({ ...inputs, [event.target.name]: event.target.value }));\r\n    }\r\n\r\n\r\n\r\n    return {\r\n        handleSubmit,\r\n        handleInputChange,\r\n        inputs,\r\n        errors,\r\n        touched,\r\n        isSubmitting,\r\n        redirectTo\r\n    };\r\n}\r\nexport default useSignUpForm;","export default function validateAuthentication(values) {\r\n    console.log('validateAuthentication called');\r\n    let errors = {}\r\n    if (values.floor_q1 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q2 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q3 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q4 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q5 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q6 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q7 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q8 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q9 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q10 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q11 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q12 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q13 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q14 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q15 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.floor_q16 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q1 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q2 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q3 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q4 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q5 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q6 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q7 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n    if (values.staff_q8 == \"\") {\r\n        errors.date = \"Required Date\"\r\n    }\r\n\r\n\r\n    return errors;\r\n}","import Page from 'components/Page';\r\nimport React, { useState, Fragment, useEffect, Component } from 'react';\r\nimport useSignUpForm from 'hooks/ScdHoFormHooks';\r\nimport validateAuthentication from 'hooks/validateAuthentication';\r\nimport classNames from 'classnames/bind';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Prompt } from \"react-router-dom\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\n\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormFeedback,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from 'reactstrap';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport styles from '../styles/error_style.scss'\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst INITIAL_STATE = {\r\n  hoLocation: \"\",\r\n  hostName: \"\",\r\n  date: \"\",\r\n  floor_q1: \"\",\r\n  floor_q2: \"\",\r\n  floor_q3: \"\",\r\n  floor_q4: \"\",\r\n  floor_q5: \"\",\r\n  floor_q6: \"\",\r\n  floor_q7: \"\",\r\n  floor_q8: \"\",\r\n  floor_q9: \"\",\r\n  floor_q10: \"\",\r\n  floor_q11: \"\",\r\n  floor_q12: \"\",\r\n  floor_q13: \"\",\r\n  floor_q14: \"\",\r\n  floor_q15: \"\",\r\n  floor_q16: \"\",\r\n  staff_q1: \"\",\r\n  staff_q2: \"\",\r\n  staff_q3: \"\",\r\n  staff_q4: \"\",\r\n  staff_q5: \"\",\r\n  staff_q6: \"\",\r\n  staff_q7: \"\",\r\n  staff_q8: \"\",\r\n};\r\n\r\n\r\n\r\n\r\nconst FormPage = () => {\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [formState, setFormState] = useState(1);\r\n  const [text, setText] = useState(\"Next\");\r\n\r\n  const { inputs, touched, handleInputChange, handleSubmit, errors, isSubmitting, redirectTo } = useSignUpForm(INITIAL_STATE, validateAuthentication);\r\n  const step = formState[currentStep];\r\n  const isLastStep = () => currentStep === 2;\r\n  const isFirstStep = () => currentStep === 1;\r\n\r\n\r\n  // const validator = new SimpleReactValidator({ autoForceUpdate: this });\r\n\r\n\r\n  const handleChange = evt => {\r\n    const { value } = evt.target;\r\n    setFormState({\r\n      ...formState,\r\n      [currentStep]: { ...formState[currentStep], value }\r\n    });\r\n  };\r\n\r\n  const handleBackClick = evt => {\r\n    evt.preventDefault();\r\n    setCurrentStep(currentStep => currentStep - 1);\r\n\r\n\r\n  };\r\n\r\n  const handleNextClick = evt => {\r\n    evt.preventDefault();\r\n    // if (validator.allValid()) {\r\n    //   console.log('if called')\r\n    // } else {\r\n    //   console.log('else called')\r\n    //   validator.showMessages();\r\n\r\n    // }\r\n    setCurrentStep(currentStep => currentStep + 1);\r\n  };\r\n\r\n  const goToHome = () => {\r\n    if (redirectTo) {\r\n      console.log(\"Redirect To Called\")\r\n      return <Redirect to='/' />\r\n    }\r\n  }\r\n  const isLast = isLastStep();\r\n  const isFirst = isFirstStep();\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    < Fragment >\r\n      {goToHome()}\r\n      <Tabs id=\"controlled-tab-example\" activeKey={currentStep} onSelect={{ handleChange }}  >\r\n\r\n        {/* \r\n        <Tab eventKey={1} title=\"HO Details\">\r\n          <Page >\r\n            <Row>\r\n              <Col xl={12} lg={12} md={12}>\r\n                <Card>\r\n                  <CardHeader>HO Details</CardHeader>\r\n                  <CardBody>\r\n                    <Form>\r\n                      <FormGroup row>\r\n                        <Label for=\"ho_location\" sm={2} size=\"lg\">HO Location:</Label>\r\n                        <Col sm={5}>\r\n                          <Input className={`form-control ${errors.email && touched.email && 'is-invalid'}`}\r\n                            bsSize=\"lg\"\r\n                            type=\"text\"\r\n                            valid={false}\r\n                            onChange={handleInputChange}\r\n                            value={inputs.hoLocation}\r\n                            name=\"hoLocation\"\r\n                          />\r\n\r\n                          {/* <div>\r\n                            {validator.message('title', inputs.hoLocation, 'required|alpha')}\r\n                          </div> \r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <Label for=\"host_name\" sm={2} size=\"lg\">Host Name:</Label>\r\n                        <Col sm={5}>\r\n                          <Input bsSize=\"lg\"\r\n                            type=\"text\"\r\n                            onChange={handleInputChange}\r\n                            value={inputs.hostName}\r\n                            valid={false}\r\n                            name=\"hostName\"\r\n                          />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <Label for=\"host_dept\" sm={2} size=\"lg\">Host Depratment:</Label>\r\n                        <Col sm={5}>\r\n                          <Input bsSize=\"lg\"\r\n                            type=\"text\"\r\n                            onChange={handleInputChange}\r\n                            value={inputs.hostDept}\r\n                            name=\"hostDept\"\r\n                          />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup row>\r\n                        <Label for=\"date\" sm={2} size=\"lg\">Date:</Label>\r\n                        <Col sm={5}>\r\n                          <Input bsSize=\"lg\"\r\n                            type=\"text\"\r\n                            onChange={handleInputChange}\r\n                            value={inputs.date}\r\n                            name=\"date\"\r\n                          />\r\n                        </Col>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Page>\r\n        </Tab>\r\n       \r\n      */}\r\n\r\n        <Tab eventKey={1} title=\"HO Floor\">\r\n          <Page >\r\n            <Card>\r\n              <CardHeader>HO Floor</CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >Floor Main entrance door and glass walls clean and spotless?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q1}\r\n                      name=\"floor_q1\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q2\" >All Indoor lights switched on Floor?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q2}\r\n                      name=\"floor_q2\">\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q3\" >Main Floor - Dusted / Mopped/ Vacuumed?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q3}\r\n                      name=\"floor_q3\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q4\" >Air-Conditioners/ Heaters turned on Floor (if required)?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q4}\r\n                      name=\"floor_q4\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q5\" >Floor Walls are neat (no loose wires)?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q5}\r\n                      name=\"floor_q5\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q6\" >All staff Desk kept neat & clean in organized on manner?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q6}\r\n                      name=\"floor_q6\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q7\" >Floor furniture polished/ ingood condition (not torn or worn out)?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q7}\r\n                      name=\"floor_q7\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q8\" >All staff Desk kept neat & clean in organized on manner?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q8}\r\n                      name=\"floor_q8\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q9\" >Floor furniture polished/ ingood condition (not torn or worn out)?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q9}\r\n                      name=\"floor_q9\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q10\" >All dept documentation, files, registers neatly stored safely?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q10}\r\n                      name=\"floor_q10\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q12\" >Floor Customer Waiting area is clean and organized?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q11}\r\n                      name=\"floor_q11\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q12\" >Check Fax Machine / Telephone exchange / Photocopier & Main Printer working?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q12}\r\n                      name=\"floor_q12\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q13\" >Elctric cables/ wires are properly cliped on all desk?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q13}\r\n                      name=\"floor_q13\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q14\" >Cafetaria area is clean & sitting area well organized?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q14}\r\n                      name=\"floor_q14\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q15\" >Toilets (Washed / Mopped / Tissue available / washing material removed)?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q15}\r\n                      name=\"floor_q15\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q16\" >Kitchen (clean cabinets / sink/ oven / refrigerator / floor mopped)?</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.floor_q16}\r\n                      name=\"floor_q16\"  >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Page>\r\n        </Tab>\r\n        <Tab eventKey={2} title=\"HO Staff\">\r\n          <Page >\r\n            <Card>\r\n              <CardHeader>HO Staff</CardHeader>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >General observation of Custodian for HO staff reaching on time. (as per SOP all staff must reach office at 09:00 AM & available on workstation)?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q1}\r\n                      name=\"staff_q1\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >All staff attending Phone on  3 Bells?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q2}\r\n                      name=\"staff_q2\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >PABX Auto attended is working?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q3}\r\n                      name=\"staff_q3\">\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >All Staff wearing bank ID card during banking hours?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q4}\r\n                      name=\"staff_q4\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >Clean desk policy true implementation is observed on all staff desk?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q5}\r\n                      name=\"staff_q5\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >Support staff (Tea boy, Driver, Cleaning staff) wearing proper uniform?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q6}\r\n                      name=\"staff_q6\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >No staff was found smoking with in the premises / at entrance?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q7}\r\n                      name=\"staff_q7\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"q1\" >Staff remains absence unnecessarly (frequency /Longer period) from his/her seats for Lunch/breakfast other then assigned breaktime?</Label>\r\n                    <Input type=\"select\"\r\n                      onChange={handleInputChange}\r\n                      value={inputs.staff_q8}\r\n                      name=\"staff_q8\" >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"NO\">NO</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <Button disabled={isSubmitting} type=\"submit\"> Submit</Button>\r\n\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Page>\r\n        </Tab>\r\n      </Tabs>\r\n      {!isFirst && <Button onClick={handleBackClick}>&lt; Back</Button>}\r\n      {!isLast && <Button onClick={handleNextClick}>Next &gt;</Button>}\r\n\r\n\r\n    </Fragment >\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default FormPage;\r\n"],"sourceRoot":""}